#include <Cmm.h>
#include "Errors.h"


stg_tryPack (gcptr original)
{
    // args: closure (graph root to serialize)
    gcptr buff;
    W_ errCode;

    MAYBE_GC_P(stg_tryPack, original);

    // assign something to keep cmm reg.allocator happy
    buff = ghczmprim_GHCziTypes_False_closure;
    errCode = P_SUCCESS;

    // call packing function (without giving the TSO, no blocking)
    ("ptr" buff) = ccall pmtryPackToMemory(original "ptr", NULL,
                                         MyCapability() "ptr");
    // small values indicate failure, see includes/rts/Parallel.h
    if (buff <= P_ERRCODEMAX) {
        errCode = buff;
        buff = ghczmprim_GHCziTypes_False_closure;
    } else {
        errCode = P_SUCCESS;
    }

    return (errCode, buff);
}


stg_unpack (gcptr buff)
{
    // args: R1 ByteArray# containing a serialized subgraph
    W_ new;
    W_ errCode;

    // assign something to keep cmm reg.allocator happy
    new = ghczmprim_GHCziTypes_False_closure;
    errCode = P_SUCCESS;

    MAYBE_GC_P(stg_unpack, buff);

    // call packing function
    ("ptr" new) = ccall pmUnpackGraphWrapper(buff "ptr", MyCapability() "ptr");

    if (new <= P_ERRCODEMAX) {
        errCode = new;
        new = ghczmprim_GHCziTypes_False_closure;
    }

    return (errCode, new);
}
